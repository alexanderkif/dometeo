(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[1],{0:function(e,t,o){e.exports=o("2f39")},"2f39":function(e,t,o){"use strict";o.r(t);var n=o("967e"),a=o.n(n),r=(o("a481"),o("96cf"),o("fa84")),i=o.n(r),s=(o("7d6e"),o("e54f"),o("985d"),o("31cd"),o("2b0e")),l=o("1f91"),d=o("42d2"),h=o("b05d");s["a"].use(h["a"],{config:{},lang:l["a"],iconSet:d["a"]});var c=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{attrs:{id:"q-app"}},[o("router-view")],1)},u=[],p={name:"App"},f=p,m=o("2877"),b=Object(m["a"])(f,c,u,!1,null,null,null),w=b.exports,y=o("2f62");s["a"].use(y["a"]);var g=function(){var e=new y["a"].Store({modules:{},strict:!1});return e},k=o("8c4f"),v=[{path:"/",component:function(){return Promise.all([o.e(0),o.e(3)]).then(o.bind(null,"713b"))},children:[{path:"",component:function(){return Promise.all([o.e(0),o.e(4)]).then(o.bind(null,"bc13b"))}},{path:"/how",component:function(){return Promise.all([o.e(0),o.e(6)]).then(o.bind(null,"5e01"))}},{path:"/arduino",component:function(){return Promise.all([o.e(0),o.e(7)]).then(o.bind(null,"0735"))}},{path:"/backend",component:function(){return Promise.all([o.e(0),o.e(5)]).then(o.bind(null,"c9be"))}},{path:"/frontend",component:function(){return Promise.all([o.e(0),o.e(10)]).then(o.bind(null,"e4ea"))}},{path:"/buy",component:function(){return Promise.all([o.e(0),o.e(9)]).then(o.bind(null,"3212"))}}]}];v.push({path:"*",component:function(){return Promise.all([o.e(0),o.e(8)]).then(o.bind(null,"e51e"))}});var x=v;s["a"].use(k["a"]);var A=function(){var e=new k["a"]({scrollBehavior:function(){return{x:0,y:0}},routes:x,mode:"hash",base:""});return e},B=function(){return D.apply(this,arguments)};function D(){return D=i()(a.a.mark((function e(){var t,o,n;return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if("function"!==typeof g){e.next=6;break}return e.next=3,g({Vue:s["a"]});case 3:e.t0=e.sent,e.next=7;break;case 6:e.t0=g;case 7:if(t=e.t0,"function"!==typeof A){e.next=14;break}return e.next=11,A({Vue:s["a"],store:t});case 11:e.t1=e.sent,e.next=15;break;case 14:e.t1=A;case 15:return o=e.t1,t.$router=o,n={el:"#q-app",router:o,store:t,render:function(e){return e(w)}},e.abrupt("return",{app:n,store:t,router:o});case 19:case"end":return e.stop()}}),e)}))),D.apply(this,arguments)}var W=o("a925"),T={failed:"Action failed",success:"Action was successful",main:{title:"Autonomous WiFi weather station with solar panels",nav0:["What's going","on here?"],nav1:["How it","works?"],nav2:["See an","example"],nav3:["What details","do I need?"],nav4:["More about","backend"],nav5:["More about","arduino"],nav6:["More about","frontend"],nav7:["What sensors","are there?"]},home:{h1:"Do you want to easily and effortlessly introduce yourself or your child to modern web programming with a backend on Node.js and a frontend on Vue / Quasar, and learn to know how to use arduino microcontrollers? You will come closer to understanding if you repeat this project of an external autonomous Wi-Fi weather station with solar batteries or implement your own idea with other sensors.",h2:"Maybe you want to monitor weather or light sensors, opening of doors or windows, turning of electrical appliances or carbon dioxide levels during the night? Would you like to have graphs of these events for monitoring or analysis for a certain period?",h3:"Or maybe you are going to build a dependence of the temperature in the rooms of your energy-saving smart home on the direction of the wind and the temperature outside? Or do you want to know closing of which one of the interior doors stops air convection inside the house and reduces heating costs?",h4:"If you solder a pair of sensors and program them a little, you can record the readings of these sensors in a database for analysis, well, or just watch and make predictions."},how:{h1:"We will consider the simplified process of writing to the database using the example of recording the door status (open / closed):",li11:"Arduino periodically connects via WiFi to the Internet and sends a POST request for a backend with door status data. For example, while the door is closed periodically sends a one in the data, when it is open - zero.",li12:"The program on the server receives this data, adds the current time to it, and adds it to the database.",li13:"That's all.",h2:"To view the data, in the browser you need to go to the front-end address, after which the Javascript application will be loaded into the browser. It is possible to save this Frontend application to your computer or phone and not to perform this step in the future.",h3:"Now the browser-based Javascript application can receive data from Backend:",li21:'To the backend application on the server, we send a request, for example, this: "send us the door status from 20:00 on December 31, 2019 to 08:00 on 01/01/2020 in 30 minutes increments."',li22:'The backend application takes this data from the database and sends it to us. According to the example above: "20.00 December 31, 2019 - closed, 20.30 December 31, 2019 - closed, 21:00 December 31, 2019 - open, 21.30 December 31, 2019 - closed, ..., 08:00 01/01/2020 - closed."',li23:"We look at the data, possibly in the form of a graph, and see that the door opened between 20.30 - 21.00 12.31.2019.",li24:"If you need to know more precisely, then repeat the request for a shorter period and with a smaller step.",li25:"That's all."},buy:{h1:"What and where do we need to buy, and what can we find for free",h2:"Buy:",goods:[{title:"Wemos D1 Mini V3.0",text:"This main board is a microcontroller with a built-in WiFi module."},{title:"BME 280",text:"Temperature, humidity and pressure sensor."},{title:"Battery 18650",text:"You can take it from an old laptop."},{title:"Battery holder 18650",text:"For convenience and the possibility of hot swapping with a long absence of sunny days."},{title:"The solar panel",text:"Or two solar panels for series connection in order to increase voltage, if there are many cloudy days."},{title:"Resistors",text:"One resistor for 120-130 kOhm (I have 125 kOhm, connected to input A0), and three resistances 10 kOhm. Use a series and parallel connection of resistors."},{title:"Any diode",text:"Resistors, diodes and mosfets can be bought at the nearest radio parts store or removed from old radio cards."},{title:"MOSFET P0603BDG",text:"You can use any other n-channel field effect transistors with 3V opening. They can also be removed from faulty motherboards."}]},backend:{h1:"Backend Operation Algorithm",h2:"The sequence of steps to launch and deploy Backend application of a standalone WiFi weather station",li1:"Delivery takes time, so the first thing to order on Aliexpress or buy in the radio parts store: a Wemos D1 mini board, BME 280 sensor, a 18650 battery + holder, a solar panel (or two for successive switching on if there are many cloudy days), resistance 125, 10, 10, 10 kOhm, field effect transistors P0603BDG (can be removed from the motherboard), diode, wiring. You can also purchase soldering kits or soldering stations, additional sensors or kits for beginners.",li2:["Register on ","GitHub",". On GitHub we will save our Backend application."],li3:["Install ","Git",". Git is needed to work with GitHub."],li4:["Fork into your github ","https://github.com/alexanderkif/meteo"," (Fork button) and clone it to your computer (git clone https://github.com/yourRepository/meteo.git command)."],li5:["Register for ","Mongo DB",". Here will be located the Database for our Backend application."],li6:["Register at ",'Zeit.co (Now) "Continue with GitHub"',". Our Backend app from GitHub will automatically launch there."],li7:"Create a new project on Zeit.co. Bind it to your meteo repository on GitHub (GIT INTEGRATION). Add database uri to environment variables.",li8:'Flash the Wemos / Arduino board. Look in the menu "MORE ABOUT ARDUINO".',li9:"Install ",li10:"Install ",li11:"In VSCode, open the meteo folder and in the terminal (ctrl + ~) run npm install.",li12:"Since there are changes (file MeteoBasicHttpsClient.ino), you can commit and push a local meteo on GitHub. The deployment to zeit.co will automatically happen, where there will be a link to the deployed API.",li13:"The backend is ready."},arduino:{li1:"Install Arduino IDE",li2:"Open the sketch MeteoBasicHttpsClient.ino from the arduino folder.",li3:"Correct with your data",li4:"Connect the Wemos D1 mini board to a computer with a full four-wire USB cable",li5:"Flash the Wemos D1 mini board with a downloaded sketch",li6:"The board should immediately start sending data to the server with the Backend application",h1:"The algorithm of the program, flashed in Arduino.",h2:['Next, you need to collect a scheme for autonomous work and the possibility of installing a weather station outside the house. Where and what details to take, see the menu "WHAT DETAILS DO I NEED?". For assembly, you can use soldering or ',"debug boards for solderless mounting and connecting wires for Arduino."],h3:"Be sure to set the D0-RST jumper to exit the board from deep sleep mode. When flashing the board, do not forget to remove this jumper.",h4:"The board starts, sends data and falls asleep for 5 minutes. To save battery power, the field effect transistor at pin D6 turns off the power to the BME280. The 18650 battery is controlled by input A0. If the battery voltage exceeds 4.2V, the D7 output breaks the battery charge circuit from the solar panel."},front:{h1:"You can write your own version of the frontend. Here are the query options for the backend application:",h2:["In the example, Frontend is implemented on the "," based on "],h3:["You can ","fork it on your GitHub or clone it on your local computer",". Change urlAPI in the data.json file with the address of your backend. Install dependencies by running ",". And build your own backend with the "," command to create the SPA application, or "," to create the PWA application. After that, we can run "," to host the application on gh-pages, or "," to host the PWA application on gh-pages."],h4:["Or copy the application to your web server from the "," or "," folder, respectively."]}},I={failed:"Действие завершилось неудачей",success:"Действие завершилось успешно",main:{title:"Автономная WiFi метеостанция на солнечной энергии",nav0:["Что здесь","происходит?"],nav1:["как это","работает?"],nav2:["посмотреть","пример"],nav3:["какие детали","мне нужны?"],nav4:["Подробнее","про backend"],nav5:["Подробнее","про arduino"],nav6:["Подробнее","про frontend"],nav7:["какие еще","есть датчики?"]},home:{h1:"Хотите легко и играючи познакомить себя или вашего ребенка с современным веб-программированием с бэкендом на Node.js и фронтендом на Vue / Quasar, а также с микроконтроллерами ардуино? Вы приблизитесь к пониманию, если повторите этот проект наружной автономной Wi-Fi метеостанции на солнечных батареях или реализуете эту задумку со своими датчиками.",h2:"Может быть, вы хотите следить за погодой или датчиками освещенности, открыванием дверей или окон, включением электроприборов или уровнями углекислого газа в течение ночи? Хотели бы вы иметь графики этих событий для мониторинга или анализа за определенный период?",h3:"Или, может быть, вы собираетесь построить зависимость температуры в комнатах своего энергосберегающего умного дома от направления ветра и температуры снаружи? Или вы хотите узнать, какая из внутренних дверей останавливает конвекцию воздуха в доме и снижает расходы на отопление?",h4:"Если спаять пару датчиков и немного их запрограммировать, то можно записать показания этих датчиков в базу данных для анализа, ну или просто наблюдать и делать прогнозы."},how:{h1:"Упрощенно процесс записи в базу данных рассмотрим на примере записи состояния двери (открыта/закрыта):",li11:"Ардуина периодично соединяется по WiFi с интернетом и отправляет POST запрос на бекенд с данными состояния двери. Например, пока дверь закрыта периодично отправляет в данных единичку, когда открыта - ноль.",li12:"Программа на сервере принимает эти данные, добавляет к ним текущее время и складывает в базу данных.",li13:"Все.",h2:"Чтобы посмотреть данные, в браузере нужно перейти по адресу фронтенда, после чего в браузер загрузится Javascript приложение. Есть возможность сохранить это Frontend приложение на свой компьютер или телефон и в дальнейшем этот шаг не выполнять.",h3:"Теперь браузерное Javascript приложение может получать данные с Backend:",li21:'Backend приложению на сервере отправляем запрос, например такой: "отправь нам состояние двери с 20.00 31.12.2019 по 08.00 01.01.2020 с шагом 30 минут".',li22:'Backend приложение забирает эти данные из базы данных и отправляет нам. По примеру выше следующее: "20.00 31.12.2019 - закрыта, 20.30 31.12.2019 - закрыта, 21.00 31.12.2019 - открыта, 21.30 31.12.2019 - закрыта, ..., 08.00 01.01.2020 - закрыта".',li23:"Мы смотрим на данные, возможно в виде графика, и видим, что дверь открывалась между 20.30 - 21.00 31.12.2019.",li24:"Если нужно узнать точнее, то повторяем запрос за меньший период и с меньшим шагом.",li25:"Все."},buy:{h1:"Что и где нужно купить, а что можно найти бесплатно",h2:"Купить:",goods:[{title:"Wemos D1 Mini V3.0",text:"Основная плата-микроконтроллер со встроенным WiFi модулем."},{title:"BME 280",text:"Датчик температуры, влажности и давления."},{title:"Аккумулятор 18650",text:"Можно взять из старого ноутбука."},{title:"Держатель для аккумулятора 18650",text:"Для удобства и возможности горячей замены на случай длительного отсутствия солнечных дней."},{title:"Солнечная панель",text:"Или две для последовательного включения с целью увеличения напряжения, если много пасмурных дней."},{title:"Cопротивления (резисторы)",text:"Один резистор на 120-130 кОм (у меня 125 кОм, подключен ко входу A0), и три сопротивления 10 кОм. Используйте последовательное и параллельное соединение резисторов."},{title:"Диод (любой)",text:"Резисторы, диод и мосфеты можно купить в ближайшем магазине радиодеталей или выпаять из старых радио плат."},{title:"MOSFET P0603BDG",text:"Можно использовать любые другие полевые транзисторы с n-каналом и открытием 3V. Их также можно выпаять из неисправных материнских плат."}]},backend:{h1:"Алгоритм работы Backend",h2:"Последовательность шагов для запуска и деплоя Backend приложения автономной WiFi метеостанции",li1:"Доставка занимает время, поэтому первым делом заказать на Aliexpress (купить в магазине радио) детали: плату Wemos D1 mini, датчик BME 280, аккумулятор 18650 + держатель, солнечную панель (или две для последовательного включения, если много пасмурных дней), сопротивления 125, 10, 10, 10 кОм, полевые транзисторы P0603BDG (можно выпаять из материнских плат), диод, проводки. Также можно приобрести паяльные наборы или паяльные станции, дополнительные датчики или наборы для начинающих.",li2:["Зарегистрироваться на ","GitHub",". На GitHub будем сохранять наше Backend приложение."],li3:["Установить ","Git",". Git нужен для работы с GitHub."],li4:["Форкнуть в свой Гитхаб ","https://github.com/alexanderkif/meteo"," (кнопка Fork) и клонировать к себе на компьютер (команда git clone https://github.com/yourRepository/meteo.git)."],li5:["Зарегистрироваться на ","Mongo DB",". Здесь будет расположена База данных для нашего Backend приложения."],li6:["Зарегистрироваться на ",'Zeit.co (Now) "Continue with GitHub"',". Там автоматически будет запускаться наше Backend приложение с GitHub."],li7:"Создать новый проект на Zeit.co. Привязать его к своему репозиторию meteo на GitHub (GIT INTEGRATION). Добавить uri базы данных в переменные окружения.",li8:'Прошить плату Wemos/Arduino. Cмотрите в меню "ПОДРОБНЕЕ ПРО ARDUINO".',li9:"Установить ",li10:"Установить ",li11:"В VSCode открыть папку meteo и в терминале (ctrl+~) выполнить npm install.",li12:"Так как есть изменения (файл MeteoBasicHttpsClient.ino), то можно закоммитить и запушить на GitHub локальный meteo. Автоматически произойдет деплой на zeit.co, где будет ссылка задеплоенного API.",li13:"Все, бэкенд готов."},arduino:{li1:"Установите Arduino IDE",li2:"Откройте скетч MeteoBasicHttpsClient.ino из папки arduino.",li3:"Исправьте своими данными",li4:"Подключите плату Wemos D1 mini к компьютеру полным четырехпроводным проводом USB",li5:"Прошейте плату Wemos D1 mini загруженным скетчем",li6:"Плата сразу должна начать отправлять данные на сервер с Backend приложением",h1:"Алгоритм работы программы, прошитой в Ардуино.",h2:['Далее нужно собрать схему для автономной работы и возможности установки метеостанции вне дома. Где и какие детали взять смотрите в меню "КАКИЕ ДЕТАЛИ МНЕ НУЖНЫ?". Для сборки можно использовать пайку или ',"отладочные платы для беспаечного монтажа и соединительные провода для Arduino ."],h3:"Не забудьте установить перемычку D0-RST для выхода платы из режима глубокого сна. На время прошивки платы не забывайте разрывать эту перемычку.",h4:"Плата стартует, отправляет данные и засыпает на 5 минут. В целях экономии энергии батареи полевой транзистор на выводе D6 отключает питание датчика BME280. Заряд аккумулятора 18650 контролируется входом A0. Если напряжение на батарее превышает 4.2V, выход D7 разрывает цепь заряда аккумулятора от солнечной панели."},front:{h1:"Вы можете написать свой вариант фронтенда. Вот варианты запросов к приложению бекенда:",h2:["В примере Frontend реализован на "," основанном на "],h3:["Вы можете ","форкнуть его в свой GitHub или клонировать на свой локальный компьютер",". Изменить в файле data.json значение urlAPI адресом своего бэкенда. Установить зависимости, выполнив в консоли ",". И собрать свой собственный бекенд командой "," для создания SPA приложения, или "," для создания PWA приложения. После этого можем выполнить "," для размещения на gh-pages SPA приложения, или "," для размещения на gh-pages PWA приложения."],h4:["Или скопировать приложение на ваш веб сервер из папки "," или "," соответственно."]}},G={"en-us":T,ru:I};s["a"].use(W["a"]);var P=new W["a"]({locale:"en-us",fallbackLocale:"en-us",messages:G}),O=function(e){var t=e.app;t.i18n=P},F=o("bc3a"),H=o.n(F);function M(){return S.apply(this,arguments)}function S(){return S=i()(a.a.mark((function e(){var t,o,n,r,i,l,d,h,c;return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,B();case 2:t=e.sent,o=t.app,n=t.store,r=t.router,i=!0,l=function(e){i=!1,window.location.href=e},d=window.location.href.replace(window.location.origin,""),h=[O,void 0],c=0;case 11:if(!(!0===i&&c<h.length)){e.next=29;break}if("function"===typeof h[c]){e.next=14;break}return e.abrupt("continue",26);case 14:return e.prev=14,e.next=17,h[c]({app:o,router:r,store:n,Vue:s["a"],ssrContext:null,redirect:l,urlPath:d});case 17:e.next=26;break;case 19:if(e.prev=19,e.t0=e["catch"](14),!e.t0||!e.t0.url){e.next=24;break}return window.location.href=e.t0.url,e.abrupt("return");case 24:return console.error("[Quasar] boot error:",e.t0),e.abrupt("return");case 26:c++,e.next=11;break;case 29:if(!1!==i){e.next=31;break}return e.abrupt("return");case 31:new s["a"](o);case 32:case"end":return e.stop()}}),e,null,[[14,19]])}))),S.apply(this,arguments)}s["a"].prototype.$axios=H.a,M()},"31cd":function(e,t,o){}},[[0,2,0]]]);